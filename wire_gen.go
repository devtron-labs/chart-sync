// Code generated by Wire. DO NOT EDIT.

//go:generate go run github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package main

import (
	"github.com/devtron-labs/chart-sync/internal"
	"github.com/devtron-labs/chart-sync/internal/logger"
	"github.com/devtron-labs/chart-sync/internal/sql"
	"github.com/devtron-labs/chart-sync/pkg"
)

// Injectors from wire.go:

func InitializeApp() (*App, error) {
	sugaredLogger := logger.NewSugardLogger()
	config, err := sql.GetConfig()
	if err != nil {
		return nil, err
	}
	db, err := sql.NewDbConnection(config, sugaredLogger)
	if err != nil {
		return nil, err
	}
	chartRepoRepositoryImpl := sql.NewChartRepoRepositoryImpl(db)
	helmRepoManagerImpl := pkg.NewHelmRepoManagerImpl(sugaredLogger)
	appStoreRepositoryImpl := sql.NewAppStoreRepositoryImpl(sugaredLogger, db)
	appStoreApplicationVersionRepositoryImpl := sql.NewAppStoreApplicationVersionRepositoryImpl(sugaredLogger, db)
	configuration, err := internal.ParseConfiguration()
	if err != nil {
		return nil, err
	}
	syncServiceImpl := pkg.NewSyncServiceImpl(chartRepoRepositoryImpl, sugaredLogger, helmRepoManagerImpl, appStoreRepositoryImpl, appStoreApplicationVersionRepositoryImpl, configuration)
	app := NewApp(sugaredLogger, db, syncServiceImpl)
	return app, nil
}
